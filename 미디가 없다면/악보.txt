on
D:/게임/스팀게임/민더스트리/로직코드.txt

####################################################################################################

이 txt 파일의 인코딩 방식은 UTF-8이어야 하고, 이름은 따옴표나 다른 요소 없이 '악보'여야 합니다.
파일 경로는 프로그램에서 입력을 받기 때문에 딱히 상관없습니다.

이 프로그램을 사용하려면 파이썬과 mido 모듈(현재 1.2.10)이 필요합니다. 또한, IDLE로 실행하는 것이 좋습니다.
mido 모듈을 설치하려면 명령 프롬프트에 따옴표 없이 'pip install mido'라고 입력하세요.
(아, 참고로 저는 파이썬 3 씁니다. 컴퓨터에 파이썬 2도 있는데 mido 설치하려니까 거기에 깔려서 수동으로 옮겼습니다.)

프로그램에서는 맨 위 2줄만 읽습니다. (여기에 설명을 쓸 수 있는 이유)
첫 번째 줄은 2번째 줄의 파일이 이미 존재하면 경고를 띄웁니다. 이 기능은 프로그램 내에서 끌 수 있습니다.
두 번째 줄은 지금 이 파일에 쓰인 악보를 로직 코드로 변환해 저장할 txt 파일의 위치입니다.
파일 경로를 입력할 때 \(역슬래시)는 /(슬래시)로 바꿔서 입력하고, 파일명과 확장자까지 입력해야 합니다.

!!! 주의: txt 파일은 쓰기를 해야 하기 때문에, 파일 경로에 같은 이름의 파일이 있다면 기존 파일이 경고 없이 삭제됩니다! !!!
(이것 때문에 예전에 만들었던 로직 코드 써놓은거 하나 날라감)

변환 완료 시 셸 창에 blocks와 lines가 표시되는데 blocks는 미디를 온전히 연주하는 데 필요한 노트 블록의 수이고
lines는 연주'에만' 필요한 코드 줄 수입니다. (스위치 상태 감지, 메모리 셀 입출력 등은 제외)
84개의 노트 블록이 각각 한 가지 음만 연주하는 건반 모드가 켜져 있으면 blocks는 84로 고정됩니다.

변환할 때 연주 코드가 900줄이 넘으면 여러 페이지로 나뉘어 출력되는데,
한 프로세서에 최대 999줄까지 들어갈 수 있기 때문에 그런 것으로
페이지 수만큼의 프로세서를 준비해서 각 페이지 내용 전체를 복붙해주시면 됩니다.
참고: Ctrl 키를 누른 채로 A, C, W를 순서대로 누르면 모두 선택 -> 복사 -> 창 닫기를 빠르게 할 수 있습니다.

노트 블록을 연주하는 모든 프로세서는 모든 노트 블록(block1, block2...)과 메모리 셀(cell1)에 연결되어 있어야 하며,
특히 첫 번째와 마지막 프로세서는 스위치(switch1)에도 연결되어 있어야 합니다.
메모리 셀의 0번 칸은 연주할 악기(0~9까지 가능)를 결정하며, 1번 칸은 연주할 파트(0부터 시작, 자동으로 관리됨)를 결정합니다.

악보는 아래 형식을 지켜 이 파일에 바로 써주시면 됩니다.
start: 악보의 시작. 이게 나오기 전까지는 무시한다.
track: 트랙의 시작. 다음 트랙이 시작되면 자동으로 끝난다. 연주에 필요한 노트블록 수는 트랙 수와 같다.
end: 악보의 끝. 이게 나올 때까지 읽기를 반복한다.
음표는 음이름(C, D...), 조표(있을 경우, #만 지원), 옥타브(1~7만 지원) 순서대로 씁니다. 그 뒤에 1칸 띄우고 음표를 연주할 박자를 입력합니다.
음표가 있어야 할 위치에 숫자만 있다면 BPM을 의미합니다.
아래는 예시입니다. 아마 대부분의 사람들이 아는 멜로디이지 않을까요?
####################################################################################################

start
track
104 0
track
D#6 0.5
D#5 0.25
A#5 0.75
G#5 1
D#6 0.5
A#5 1.5
track
A#2 0
A#3 0
D#4 0
A#4 1.5
D#2 0
D#3 0
A#3 0
D#4 0
D#5 1.5
D#2 0
D#3 0
A#3 0
D#4 0
A#4 1.5
end
